import streamlit as st
import pandas as pd
from utils.helpers import fetch_data, get_owner_name, get_support_group_name

def render():
    st.header("üè† –í—Å–µ –∞–∫—Ç–∏–≤—ã")

    assets = fetch_data("airflow_assets")
    jobs = fetch_data("greenplum_jobs")
    runs_dag = fetch_data("dag_runs")
    runs_job = fetch_data("job_runs")

    STATUS_COLORS = {-1: "üî¥", 1: "üîµ", 2: "üü°", 3: "üü¢"}

    def last_status_dots(runs, asset_id_field, asset_id):
        relevant = [r["status"] for r in runs if r[asset_id_field] == asset_id]
        relevant = relevant[-3:] if relevant else []
        return " ".join(STATUS_COLORS.get(s, "‚ö™") for s in relevant)

    st.subheader("DAG")
    df_dag = pd.DataFrame(assets)
    if not df_dag.empty:
        df_dag["–í–ª–∞–¥–µ–ª–µ—Ü"] = df_dag["owner_id"].apply(get_owner_name)
        df_dag["–ì—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"] = df_dag["support_group_id"].apply(get_support_group_name)
        df_dag["–°—Ç–∞—Ç—É—Å—ã"] = df_dag["id"].apply(lambda i: last_status_dots(runs_dag, "airflow_asset_id", i))
        st.dataframe(df_dag[["name", "description", "–í–ª–∞–¥–µ–ª–µ—Ü", "–ì—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏", "–°—Ç–∞—Ç—É—Å—ã"]])

    st.subheader("Jobs")
    df_job = pd.DataFrame(jobs)
    if not df_job.empty:
        df_job["–í–ª–∞–¥–µ–ª–µ—Ü"] = df_job["owner_id"].apply(get_owner_name)
        df_job["–ì—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"] = df_job["support_group_id"].apply(get_support_group_name)
        df_job["–°—Ç–∞—Ç—É—Å—ã"] = df_job["id"].apply(lambda i: last_status_dots(runs_job, "greenplum_job_id", i))
        st.dataframe(df_job[["name", "description", "–í–ª–∞–¥–µ–ª–µ—Ü", "–ì—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏", "–°—Ç–∞—Ç—É—Å—ã"]])

    st.caption("üî¥ ‚Äî –£–ø–∞–ª –≤ –æ—à–∏–±–∫—É | üîµ ‚Äî –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É | üü° ‚Äî –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è | üü¢ ‚Äî –í—ã–ø–æ–ª–Ω–µ–Ω–æ")